<% content_for :head do %>
  <style type="text/css">
    path {
      fill: none;
    }
    path.govuk {
      stroke: url(#spike-gradient);
      stroke-width: 5;
    }

    path.directgov {
      stroke: #8b5d3b;
      stroke-width: 2;
      stroke-dasharray: 2, 1;
    }

    path.businesslink {
      stroke: #662d91;
      stroke-width: 2;
      stroke-dasharray: 2, 1;

    }

  </style>
  <script type="text/javascript">
    $(function() {
      d3.json("/visits.json", function(data){
        var margins = [22, 27, 15, 54],
            width = 462 - margins[1] - margins[3],
            height = 236 + 15 - margins[0] - margins[2],
            df = d3.time.format("%Y-%m-%d"),

            alldata = data["govuk"].concat(data["directgov"],data["businesslink"]),

            visit_extent = d3.extent(alldata, function(d) { return d.visits}),
            time_extent = d3.extent(alldata, function(d) { return df.parse(d.date)}),

            largest_million = Math.ceil(visit_extent[1]/1000000),
            y_scale = d3.scale.linear().domain([0, largest_million * 1000000]).range([height, 0]),
            x_scale = d3.time.scale().domain(time_extent).range([0,width]),

            line = d3.svg.line()
                .x(function(d) { return x_scale(df.parse(d.date))})
                .y(function(d) { return y_scale(d.visits)}),

            graph = d3.select("#visits")
                .append("svg:svg")
                .attr("width", width + margins[1] + margins[3])
                .attr("height", height + margins[0] + margins[2])
                .append("svg:g")
                .attr("transform", "translate(" + margins[3] + "," + margins[0] + ")");


        /* Set Up X-Axis */
        // range for X axis, start with the first date and then show every other month from there.
        function myrange(t0, t1, dt) {
          var start = new Date(t0),
              time  = new Date(t0),
              times = [];
          start = start.getYear() * 12 + start.getMonth();
          if (dt > 1) {
            while (time < t1) {
              if (!((time.getYear() * 12 + time.getMonth() - start) % dt)) times.push(new Date(+time));
              time.setMonth(time.getMonth() + 1);
            }
          } else {
            while (time < t1) times.push(new Date(+time)), time.setMonth(time.getMonth() + 1);
          }
          return times;
        }

        var xAxis = d3.svg.axis()
            .scale(x_scale)
            .ticks(myrange, 2)
            .tickFormat(d3.time.format("%b %d"));

        graph.append("svg:g")
            .attr("class", "x-axis")
            .attr("transform", "translate(0," + (height-5) + ")")
            .call(xAxis);


        /* Set Up Y-Axis */
        var y_tick_values = [];
        for (var i = 0; i <= largest_million; i++) {
          y_tick_values.push(i*1000000);
        }
        var yAxis = d3.svg.axis()
            .scale(y_scale)
            .tickValues(y_tick_values)
            .orient("left")
            .tickFormat(function(d) {
              d = d / 1000000;
              return d ? (d + "m") : d;
            });
        graph.append("svg:g")
            .attr("class", "y-axis")
            .attr("transform", "translate(-10,0)")
            .call(yAxis);


        /* Add The Graph Lines */
        $(["govuk", "directgov", "businesslink"]).each(function(i, name) {
          graph.append("svg:path")
              .attr("d", line(data[name]))
              .attr("class", name);
        });
      });
    });
  </script>
<% end %>

<svg style="width: 0; height: 0">
<defs>
  <linearGradient id="spike-gradient" x1="0%" y1="0%" x2="0%" y2="100%">
    <stop offset="0%" style="stop-color: #74B74A; stop-opacity:1" ></stop>
    <stop offset="20%" style="stop-color: #c4c4c4; stop-opacity:1" ></stop>
    <stop offset="80%" style="stop-color: #c4c4c4; stop-opacity:1" ></stop>
    <stop offset="100%" style="stop-color: #BF1E2D; stop-opacity:1" ></stop>
  </linearGradient>
</defs>
</svg>
<div class="module">
  <div class="info"></div>
  <div class="left">
    <div class="small-text">Reach</div>
    <div>Weekly visits for the last half year</div>
  </div>
  <div style="clear: both"></div>
  <div id="visits"></div>
  <div class="small-text" style="padding: 18px 0">
     <span class="blue-text">Sources: You Gov, Directgov, BusinessLink</span>
  </div>
</div>
